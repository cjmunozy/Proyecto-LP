
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN BREAK COLON COMMA CONCAT DIVIDE DIVIDEASSIGN DO DOT DOUBLECOLON ELSE ELSEIF END EQUALS FALSE FLOAT FOR FUNCTION GOTO GREATER GREATEREQUALS IDENTIFIER IF IN INPUT INTEGER LBRACE LBRACKET LEN LOCAL LOWER LOWEREQUALS LPAREN MINUS MINUSASSIGN MOD MODASSIGN NEQUALS NIL NOT OR PLUS PLUSASSIGN POWER POWERASSIGN PRINT RBRACE RBRACKET REPEAT RETURN RPAREN SEMICOLON STRING THEN TIMES TIMESASSIGN TRUE UNTIL WHILEstart : chunkchunk : blockblock : stat_liststat_list : stat_list stat\n| statstat : SEMICOLON\n| functioncall\n| BREAK\n| expressionstat : DO block ENDstat : WHILE expression DO block ENDstat : REPEAT block UNTIL expressionstat : IF expression THEN block elseif_blocks else_block ENDelseif_blocks : ELSEIF expression THEN block\n| elseif_blocks ELSEIF expression THEN block\n| emptyelse_block : ELSE block\n| emptystat : FOR IDENTIFIER ASSIGN expression COMMA expression DO block ENDstat : FOR namelist IN explist DO block ENDempty :funcname : IDENTIFIER funcname_tail method_optfuncname_tail : funcname_tail DOT IDENTIFIER\n| emptymethod_opt : COLON IDENTIFIER\n| emptyvarlist : varlist COMMA var\n| emptyvar : IDENTIFIER\n| prefixexp LBRACKET expression RBRACKET\n| prefixexp DOT IDENTIFIERnamelist : namelist COMMA IDENTIFIER\n| IDENTIFIERexplist : explist COMMA expression\n| expressionprefixexp : var\n| functioncall\n| LPAREN expression RPARENfunctioncall : prefixexp args\n| prefixexp COLON IDENTIFIER argsargs : LPAREN RPAREN\n| LPAREN explist RPAREN\n| STRINGstatement : inputstatement : printexpression : expression PLUS term\n           | expression MINUS term\nterm       : term TIMES factor\n           | term DIVIDE factor\n           | term POWER factorexpression : termterm : factorfactor : INTEGERfactor : FLOATfactor : LPAREN expression RPARENprint : PRINT LPAREN expression RPAREN\n| PRINT LPAREN STRING RPARENinput : INPUT LPAREN RPAREN'
    
_lr_action_items = {'SEMICOLON':([0,4,5,6,7,8,9,10,12,17,20,21,22,23,33,38,43,44,45,46,49,56,59,60,61,62,64,65,70,72,74,79,83,88,91,92,93,94,98,],[6,6,-5,-6,-7,-8,-9,6,6,-51,-52,-53,-54,-4,-39,-43,-46,-47,-10,6,6,-41,-48,-49,-50,-55,-55,-12,-40,-42,-11,6,6,-13,6,6,-20,6,-19,]),'BREAK':([0,4,5,6,7,8,9,10,12,17,20,21,22,23,33,38,43,44,45,46,49,56,59,60,61,62,64,65,70,72,74,79,83,88,91,92,93,94,98,],[8,8,-5,-6,-7,-8,-9,8,8,-51,-52,-53,-54,-4,-39,-43,-46,-47,-10,8,8,-41,-48,-49,-50,-55,-55,-12,-40,-42,-11,8,8,-13,8,8,-20,8,-19,]),'DO':([0,4,5,6,7,8,9,10,12,17,20,21,22,23,27,33,38,43,44,45,46,49,56,58,59,60,61,62,64,65,68,70,72,74,79,80,83,86,88,91,92,93,94,98,],[10,10,-5,-6,-7,-8,-9,10,10,-51,-52,-53,-54,-4,46,-39,-43,-46,-47,-10,10,10,-41,-35,-48,-49,-50,-55,-55,-12,79,-40,-42,-11,10,-34,10,92,-13,10,10,-20,10,-19,]),'WHILE':([0,4,5,6,7,8,9,10,12,17,20,21,22,23,33,38,43,44,45,46,49,56,59,60,61,62,64,65,70,72,74,79,83,88,91,92,93,94,98,],[11,11,-5,-6,-7,-8,-9,11,11,-51,-52,-53,-54,-4,-39,-43,-46,-47,-10,11,11,-41,-48,-49,-50,-55,-55,-12,-40,-42,-11,11,11,-13,11,11,-20,11,-19,]),'REPEAT':([0,4,5,6,7,8,9,10,12,17,20,21,22,23,33,38,43,44,45,46,49,56,59,60,61,62,64,65,70,72,74,79,83,88,91,92,93,94,98,],[12,12,-5,-6,-7,-8,-9,12,12,-51,-52,-53,-54,-4,-39,-43,-46,-47,-10,12,12,-41,-48,-49,-50,-55,-55,-12,-40,-42,-11,12,12,-13,12,12,-20,12,-19,]),'IF':([0,4,5,6,7,8,9,10,12,17,20,21,22,23,33,38,43,44,45,46,49,56,59,60,61,62,64,65,70,72,74,79,83,88,91,92,93,94,98,],[13,13,-5,-6,-7,-8,-9,13,13,-51,-52,-53,-54,-4,-39,-43,-46,-47,-10,13,13,-41,-48,-49,-50,-55,-55,-12,-40,-42,-11,13,13,-13,13,13,-20,13,-19,]),'FOR':([0,4,5,6,7,8,9,10,12,17,20,21,22,23,33,38,43,44,45,46,49,56,59,60,61,62,64,65,70,72,74,79,83,88,91,92,93,94,98,],[14,14,-5,-6,-7,-8,-9,14,14,-51,-52,-53,-54,-4,-39,-43,-46,-47,-10,14,14,-41,-48,-49,-50,-55,-55,-12,-40,-42,-11,14,14,-13,14,14,-20,14,-19,]),'LPAREN':([0,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,28,33,35,37,38,39,40,41,43,44,45,46,48,49,50,51,53,55,56,59,60,61,62,64,65,70,71,72,73,74,76,78,79,82,83,88,91,92,93,94,98,],[19,19,-5,-6,-7,-8,-9,19,28,19,28,-29,37,-51,-36,28,-52,-53,-54,-4,28,28,28,-39,28,28,-43,28,28,28,-46,-47,-10,19,28,19,28,28,37,-31,-41,-48,-49,-50,-38,-55,-12,-40,-30,-42,28,-11,28,28,19,28,19,-13,19,19,-20,19,-19,]),'IDENTIFIER':([0,4,5,6,7,8,9,10,12,14,17,20,21,22,23,33,34,36,38,43,44,45,46,49,52,56,59,60,61,62,64,65,70,72,74,79,83,88,91,92,93,94,98,],[15,15,-5,-6,-7,-8,-9,15,15,31,-51,-52,-53,-54,-4,-39,53,55,-43,-46,-47,-10,15,15,69,-41,-48,-49,-50,-55,-55,-12,-40,-42,-11,15,15,-13,15,15,-20,15,-19,]),'INTEGER':([0,4,5,6,7,8,9,10,11,12,13,17,19,20,21,22,23,24,25,28,33,35,37,38,39,40,41,43,44,45,46,48,49,50,51,56,59,60,61,62,64,65,70,72,73,74,76,78,79,82,83,88,91,92,93,94,98,],[21,21,-5,-6,-7,-8,-9,21,21,21,21,-51,21,-52,-53,-54,-4,21,21,21,-39,21,21,-43,21,21,21,-46,-47,-10,21,21,21,21,21,-41,-48,-49,-50,-55,-55,-12,-40,-42,21,-11,21,21,21,21,21,-13,21,21,-20,21,-19,]),'FLOAT':([0,4,5,6,7,8,9,10,11,12,13,17,19,20,21,22,23,24,25,28,33,35,37,38,39,40,41,43,44,45,46,48,49,50,51,56,59,60,61,62,64,65,70,72,73,74,76,78,79,82,83,88,91,92,93,94,98,],[22,22,-5,-6,-7,-8,-9,22,22,22,22,-51,22,-52,-53,-54,-4,22,22,22,-39,22,22,-43,22,22,22,-46,-47,-10,22,22,22,22,22,-41,-48,-49,-50,-55,-55,-12,-40,-42,22,-11,22,22,22,22,22,-13,22,22,-20,22,-19,]),'$end':([1,2,3,4,5,6,7,8,9,17,20,21,22,23,33,38,43,44,45,56,59,60,61,62,64,65,70,72,74,88,93,98,],[0,-1,-2,-3,-5,-6,-7,-8,-9,-51,-52,-53,-54,-4,-39,-43,-46,-47,-10,-41,-48,-49,-50,-55,-55,-12,-40,-42,-11,-13,-20,-19,]),'END':([4,5,6,7,8,9,17,20,21,22,23,26,33,38,43,44,45,56,59,60,61,62,63,64,65,66,70,72,74,75,77,81,84,87,88,90,93,95,96,97,98,],[-3,-5,-6,-7,-8,-9,-51,-52,-53,-54,-4,45,-39,-43,-46,-47,-10,-41,-48,-49,-50,-55,74,-55,-12,-21,-40,-42,-11,-21,-16,88,-18,93,-13,-17,-20,-14,98,-15,-19,]),'UNTIL':([4,5,6,7,8,9,17,20,21,22,23,29,33,38,43,44,45,56,59,60,61,62,64,65,70,72,74,88,93,98,],[-3,-5,-6,-7,-8,-9,-51,-52,-53,-54,-4,48,-39,-43,-46,-47,-10,-41,-48,-49,-50,-55,-55,-12,-40,-42,-11,-13,-20,-19,]),'ELSEIF':([4,5,6,7,8,9,17,20,21,22,23,33,38,43,44,45,56,59,60,61,62,64,65,66,70,72,74,75,77,88,93,95,97,98,],[-3,-5,-6,-7,-8,-9,-51,-52,-53,-54,-4,-39,-43,-46,-47,-10,-41,-48,-49,-50,-55,-55,-12,76,-40,-42,-11,82,-16,-13,-20,-14,-15,-19,]),'ELSE':([4,5,6,7,8,9,17,20,21,22,23,33,38,43,44,45,56,59,60,61,62,64,65,66,70,72,74,75,77,88,93,95,97,98,],[-3,-5,-6,-7,-8,-9,-51,-52,-53,-54,-4,-39,-43,-46,-47,-10,-41,-48,-49,-50,-55,-55,-12,-21,-40,-42,-11,83,-16,-13,-20,-14,-15,-19,]),'COLON':([7,15,16,18,33,38,55,56,62,70,71,72,],[-37,-29,34,-36,-39,-43,-31,-41,-38,-40,-30,-42,]),'LBRACKET':([7,15,16,18,33,38,55,56,62,70,71,72,],[-37,-29,35,-36,-39,-43,-31,-41,-38,-40,-30,-42,]),'DOT':([7,15,16,18,33,38,55,56,62,70,71,72,],[-37,-29,36,-36,-39,-43,-31,-41,-38,-40,-30,-42,]),'STRING':([7,15,16,18,33,38,53,55,56,62,70,71,72,],[-37,-29,38,-36,-39,-43,38,-31,-41,-38,-40,-30,-42,]),'PLUS':([9,17,20,21,22,27,30,42,43,44,47,54,58,59,60,61,62,64,65,67,80,85,86,89,],[24,-51,-52,-53,-54,24,24,24,-46,-47,24,24,24,-48,-49,-50,-55,-55,24,24,24,24,24,24,]),'MINUS':([9,17,20,21,22,27,30,42,43,44,47,54,58,59,60,61,62,64,65,67,80,85,86,89,],[25,-51,-52,-53,-54,25,25,25,-46,-47,25,25,25,-48,-49,-50,-55,-55,25,25,25,25,25,25,]),'THEN':([17,20,21,22,30,43,44,59,60,61,64,85,89,],[-51,-52,-53,-54,49,-46,-47,-48,-49,-50,-55,91,94,]),'RPAREN':([17,20,21,22,37,42,43,44,47,57,58,59,60,61,64,80,],[-51,-52,-53,-54,56,62,-46,-47,64,72,-35,-48,-49,-50,-55,-34,]),'RBRACKET':([17,20,21,22,43,44,54,59,60,61,64,],[-51,-52,-53,-54,-46,-47,71,-48,-49,-50,-55,]),'COMMA':([17,20,21,22,31,32,43,44,57,58,59,60,61,64,67,68,69,80,],[-51,-52,-53,-54,-33,52,-46,-47,73,-35,-48,-49,-50,-55,78,73,-32,-34,]),'TIMES':([17,20,21,22,43,44,59,60,61,62,64,],[39,-52,-53,-54,39,39,-48,-49,-50,-55,-55,]),'DIVIDE':([17,20,21,22,43,44,59,60,61,62,64,],[40,-52,-53,-54,40,40,-48,-49,-50,-55,-55,]),'POWER':([17,20,21,22,43,44,59,60,61,62,64,],[41,-52,-53,-54,41,41,-48,-49,-50,-55,-55,]),'ASSIGN':([31,],[50,]),'IN':([31,32,69,],[-33,51,-32,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'chunk':([0,],[2,]),'block':([0,10,12,46,49,79,83,91,92,94,],[3,26,29,63,66,87,90,95,96,97,]),'stat_list':([0,10,12,46,49,79,83,91,92,94,],[4,4,4,4,4,4,4,4,4,4,]),'stat':([0,4,10,12,46,49,79,83,91,92,94,],[5,23,5,5,5,5,5,5,5,5,5,]),'functioncall':([0,4,10,12,46,49,79,83,91,92,94,],[7,7,7,7,7,7,7,7,7,7,7,]),'expression':([0,4,10,11,12,13,19,28,35,37,46,48,49,50,51,73,76,78,79,82,83,91,92,94,],[9,9,9,27,9,30,42,47,54,58,9,65,9,67,58,80,85,86,9,89,9,9,9,9,]),'prefixexp':([0,4,10,12,46,49,79,83,91,92,94,],[16,16,16,16,16,16,16,16,16,16,16,]),'term':([0,4,10,11,12,13,19,24,25,28,35,37,46,48,49,50,51,73,76,78,79,82,83,91,92,94,],[17,17,17,17,17,17,17,43,44,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'var':([0,4,10,12,46,49,79,83,91,92,94,],[18,18,18,18,18,18,18,18,18,18,18,]),'factor':([0,4,10,11,12,13,19,24,25,28,35,37,39,40,41,46,48,49,50,51,73,76,78,79,82,83,91,92,94,],[20,20,20,20,20,20,20,20,20,20,20,20,59,60,61,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'namelist':([14,],[32,]),'args':([16,53,],[33,70,]),'explist':([37,51,],[57,68,]),'elseif_blocks':([66,],[75,]),'empty':([66,75,],[77,84,]),'else_block':([75,],[81,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> chunk','start',1,'p_start','lua_yacc_builder.py',9),
  ('chunk -> block','chunk',1,'p_chunk','lua_yacc_builder.py',15),
  ('block -> stat_list','block',1,'p_block','lua_yacc_builder.py',19),
  ('stat_list -> stat_list stat','stat_list',2,'p_stat_list','lua_yacc_builder.py',23),
  ('stat_list -> stat','stat_list',1,'p_stat_list','lua_yacc_builder.py',24),
  ('stat -> SEMICOLON','stat',1,'p_stat','lua_yacc_builder.py',28),
  ('stat -> functioncall','stat',1,'p_stat','lua_yacc_builder.py',29),
  ('stat -> BREAK','stat',1,'p_stat','lua_yacc_builder.py',30),
  ('stat -> expression','stat',1,'p_stat','lua_yacc_builder.py',31),
  ('stat -> DO block END','stat',3,'p_do','lua_yacc_builder.py',35),
  ('stat -> WHILE expression DO block END','stat',5,'p_stat_while','lua_yacc_builder.py',40),
  ('stat -> REPEAT block UNTIL expression','stat',4,'p_stat_repeat','lua_yacc_builder.py',45),
  ('stat -> IF expression THEN block elseif_blocks else_block END','stat',7,'p_stat_if','lua_yacc_builder.py',49),
  ('elseif_blocks -> ELSEIF expression THEN block','elseif_blocks',4,'p_elseif_blocks','lua_yacc_builder.py',53),
  ('elseif_blocks -> elseif_blocks ELSEIF expression THEN block','elseif_blocks',5,'p_elseif_blocks','lua_yacc_builder.py',54),
  ('elseif_blocks -> empty','elseif_blocks',1,'p_elseif_blocks','lua_yacc_builder.py',55),
  ('else_block -> ELSE block','else_block',2,'p_else_block','lua_yacc_builder.py',59),
  ('else_block -> empty','else_block',1,'p_else_block','lua_yacc_builder.py',60),
  ('stat -> FOR IDENTIFIER ASSIGN expression COMMA expression DO block END','stat',9,'p_stat_for','lua_yacc_builder.py',65),
  ('stat -> FOR namelist IN explist DO block END','stat',7,'p_stat_for_in','lua_yacc_builder.py',69),
  ('empty -> <empty>','empty',0,'p_empty','lua_yacc_builder.py',76),
  ('funcname -> IDENTIFIER funcname_tail method_opt','funcname',3,'p_funcname','lua_yacc_builder.py',80),
  ('funcname_tail -> funcname_tail DOT IDENTIFIER','funcname_tail',3,'p_funcname_tail','lua_yacc_builder.py',84),
  ('funcname_tail -> empty','funcname_tail',1,'p_funcname_tail','lua_yacc_builder.py',85),
  ('method_opt -> COLON IDENTIFIER','method_opt',2,'p_method_opt','lua_yacc_builder.py',89),
  ('method_opt -> empty','method_opt',1,'p_method_opt','lua_yacc_builder.py',90),
  ('varlist -> varlist COMMA var','varlist',3,'p_varlist','lua_yacc_builder.py',94),
  ('varlist -> empty','varlist',1,'p_varlist','lua_yacc_builder.py',95),
  ('var -> IDENTIFIER','var',1,'p_var','lua_yacc_builder.py',99),
  ('var -> prefixexp LBRACKET expression RBRACKET','var',4,'p_var','lua_yacc_builder.py',100),
  ('var -> prefixexp DOT IDENTIFIER','var',3,'p_var','lua_yacc_builder.py',101),
  ('namelist -> namelist COMMA IDENTIFIER','namelist',3,'p_namelist','lua_yacc_builder.py',105),
  ('namelist -> IDENTIFIER','namelist',1,'p_namelist','lua_yacc_builder.py',106),
  ('explist -> explist COMMA expression','explist',3,'p_explist','lua_yacc_builder.py',110),
  ('explist -> expression','explist',1,'p_explist','lua_yacc_builder.py',111),
  ('prefixexp -> var','prefixexp',1,'p_prefixexp','lua_yacc_builder.py',115),
  ('prefixexp -> functioncall','prefixexp',1,'p_prefixexp','lua_yacc_builder.py',116),
  ('prefixexp -> LPAREN expression RPAREN','prefixexp',3,'p_prefixexp','lua_yacc_builder.py',117),
  ('functioncall -> prefixexp args','functioncall',2,'p_functioncall','lua_yacc_builder.py',121),
  ('functioncall -> prefixexp COLON IDENTIFIER args','functioncall',4,'p_functioncall','lua_yacc_builder.py',122),
  ('args -> LPAREN RPAREN','args',2,'p_args','lua_yacc_builder.py',126),
  ('args -> LPAREN explist RPAREN','args',3,'p_args','lua_yacc_builder.py',127),
  ('args -> STRING','args',1,'p_args','lua_yacc_builder.py',128),
  ('statement -> input','statement',1,'p_start_input','lua_yacc_builder.py',135),
  ('statement -> print','statement',1,'p_start_print','lua_yacc_builder.py',139),
  ('expression -> expression PLUS term','expression',3,'p_binary_operators','lua_yacc_builder.py',143),
  ('expression -> expression MINUS term','expression',3,'p_binary_operators','lua_yacc_builder.py',144),
  ('term -> term TIMES factor','term',3,'p_binary_operators','lua_yacc_builder.py',145),
  ('term -> term DIVIDE factor','term',3,'p_binary_operators','lua_yacc_builder.py',146),
  ('term -> term POWER factor','term',3,'p_binary_operators','lua_yacc_builder.py',147),
  ('expression -> term','expression',1,'p_expression_term','lua_yacc_builder.py',160),
  ('term -> factor','term',1,'p_term_factor','lua_yacc_builder.py',164),
  ('factor -> INTEGER','factor',1,'p_factor_num','lua_yacc_builder.py',168),
  ('factor -> FLOAT','factor',1,'p_factor_float','lua_yacc_builder.py',172),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','lua_yacc_builder.py',176),
  ('print -> PRINT LPAREN expression RPAREN','print',4,'p_print','lua_yacc_builder.py',180),
  ('print -> PRINT LPAREN STRING RPAREN','print',4,'p_print','lua_yacc_builder.py',181),
  ('input -> INPUT LPAREN RPAREN','input',3,'p_input','lua_yacc_builder.py',185),
]
